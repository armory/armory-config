syntax = "proto3";
package proto.config;

option go_package = "config/deploymentConfigurations";



import "proto/deploymentConfigurations/deploymentEnv/DeploymentEnvironment.proto";
import "proto/deploymentConfigurations/providers/Providers.proto";
import "proto/deploymentConfigurations/persistentStorage/PersistentStorage.proto";
import "proto/deploymentConfigurations/features/Features.proto";
import "proto/deploymentConfigurations/metricStores/MetricStores.proto";
import "proto/deploymentConfigurations/notifications/Notifications.proto";
import "proto/deploymentConfigurations/ci/Ci.proto";
import "proto/deploymentConfigurations/repository/Repository.proto";
import "proto/deploymentConfigurations/security/Security.proto";
// Configuration for the clouddriver microservice.
message DeploymentConfigurations {

    string name = 1;
    string version = 2;
    deploymentEnvironment.DeploymentEnvironment deploymentEnvironment = 3;
    providers.Providers providers = 4;
    persistentStorage.PersistentStorage persistentStorage = 5;
    features.Features features = 6;
    metricStores.MetricStores metricStores = 7;
    notifications.Notifications notifications = 8;
    ci.Ci ci = 9;
    repository.Repository repository = 10;
    security.Security security = 11;
    // Artifacts artifacts = 12;
    // Pubsub pubsub = 13;
    // Canary canary = 14;
    // Spinnaker spinnaker = 15;
    // Webhook webhook = 16;
    // Armory armory = 17;

}


/*

ToDo:

- Review Providers
- Review PersistentStorage
- Check ci.gcb permission structure
- Check ci.Codebuild permission structure (Should be the same as ci.gcb)
- Revisit the oauth2 proto struct
*/