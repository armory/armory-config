syntax = "proto3";
package proto.providers;

option go_package = "config/deploymentConfigurations/providers";

import "proto/deploymentConfigurations/permissions/Permissions.proto";
// Configuration for the clouddriver microservice.
message Kubernetes {

    bool enabled = 1;
    string primaryAccount = 2;
    repeated KubernetesAcc accounts = 3;
    
}

message KubernetesAcc {

    string name = 1;
    repeated string requiredGroupMembership = 2;
    permissions.Permissions permissions = 3;
    repeated KubeDockerRegistries dockerRegistries = 4;
    string providerVersion = 5;
    bool configureImagePullSecrets = 6;
    bool serviceAccount = 7;
    int32 cacheThreads = 8;
    repeated string namespaces = 9;
    string kubeconfigFile = 10;
    repeated string omitNamespaces = 11;
    repeated string kinds = 12;
    repeated string omitKinds = 13;
    repeated string customResources = 14;
    repeated string cachingPolicies = 15;
    repeated string oauthScopes = 16;
    bool onlySpinnakerManaged = 17;
    string environment = 18;
    bool checkPermissionsOnStartup = 19;
    bool liveManifestCalls = 20;
    RawResourcesEndpointConfig rawResourcesEndpointConfig = 21;
    string context = 22;

}

message KubeDockerRegistries {
  string accountName = 1;
  repeated string namespaces = 2;

}

message RawResourcesEndpointConfig {
  repeated string kindExpressions = 1;
  repeated string omitKindExpressions = 2;
}




/* 

Example Config

    kubernetes:
      enabled: false
      accounts:
      - name: kube
        environment: dev
        requiredGroupMembership:
        - dev
        - test
        permissions:
          READ:
          - dev,test
          WRITE:
          - dev,test
        dockerRegistries:
        - accountName: one
          namespaces: []
        - accountName: two
          namespaces: []
        providerVersion: V1
        context: current-context
        configureImagePullSecrets: false
        serviceAccount: true
        cacheThreads: 2
        namespaces:
        - test
        - prod
        omitNamespaces:
        - dev
        - admin
        kinds:
        - pods
        - deployments
        omitKinds:
        - jobs
        - services
        customResources: []
        cachingPolicies: []
        checkPermissionsOnStartup: true
        liveManifestCalls: true
        rawResourcesEndpointConfig:
          kindExpressions: []
          omitKindExpressions: []
        oAuthScopes: []
        onlySpinnakerManaged: true
      primaryAccount: kube

*/

