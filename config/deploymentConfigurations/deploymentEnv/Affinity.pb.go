// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.14.0
// source: proto/deploymentConfigurations/deploymentEnv/Affinity.proto

package deploymentEnv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Affinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpinClouddriver        *ServiceAffinity `protobuf:"bytes,1,opt,name=spin_clouddriver,json=spinClouddriver,proto3" json:"spin_clouddriver,omitempty"`
	SpinClouddriverCaching *ServiceAffinity `protobuf:"bytes,2,opt,name=spin_clouddriver_caching,json=spinClouddriverCaching,proto3" json:"spin_clouddriver_caching,omitempty"`
	SpinClouddriverRo      *ServiceAffinity `protobuf:"bytes,3,opt,name=spin_clouddriver_ro,json=spinClouddriverRo,proto3" json:"spin_clouddriver_ro,omitempty"`
	SpinClouddriverRoDeck  *ServiceAffinity `protobuf:"bytes,4,opt,name=spin_clouddriver_ro_deck,json=spinClouddriverRoDeck,proto3" json:"spin_clouddriver_ro_deck,omitempty"`
	SpinClouddriverRw      *ServiceAffinity `protobuf:"bytes,5,opt,name=spin_clouddriver_rw,json=spinClouddriverRw,proto3" json:"spin_clouddriver_rw,omitempty"`
	SpinDeck               *ServiceAffinity `protobuf:"bytes,6,opt,name=spin_deck,json=spinDeck,proto3" json:"spin_deck,omitempty"`
	SpinEcho               *ServiceAffinity `protobuf:"bytes,7,opt,name=spin_echo,json=spinEcho,proto3" json:"spin_echo,omitempty"`
	SpinFiat               *ServiceAffinity `protobuf:"bytes,8,opt,name=spin_fiat,json=spinFiat,proto3" json:"spin_fiat,omitempty"`
	SpinFront50            *ServiceAffinity `protobuf:"bytes,9,opt,name=spin_front50,json=spinFront50,proto3" json:"spin_front50,omitempty"`
	SpinGate               *ServiceAffinity `protobuf:"bytes,10,opt,name=spin_gate,json=spinGate,proto3" json:"spin_gate,omitempty"`
	SpinIgor               *ServiceAffinity `protobuf:"bytes,11,opt,name=spin_igor,json=spinIgor,proto3" json:"spin_igor,omitempty"`
	SpinOrca               *ServiceAffinity `protobuf:"bytes,12,opt,name=spin_orca,json=spinOrca,proto3" json:"spin_orca,omitempty"`
	SpinRedis              *ServiceAffinity `protobuf:"bytes,13,opt,name=spin_redis,json=spinRedis,proto3" json:"spin_redis,omitempty"`
	SpinRosco              *ServiceAffinity `protobuf:"bytes,14,opt,name=spin_rosco,json=spinRosco,proto3" json:"spin_rosco,omitempty"`
}

func (x *Affinity) Reset() {
	*x = Affinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Affinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affinity) ProtoMessage() {}

func (x *Affinity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affinity.ProtoReflect.Descriptor instead.
func (*Affinity) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{0}
}

func (x *Affinity) GetSpinClouddriver() *ServiceAffinity {
	if x != nil {
		return x.SpinClouddriver
	}
	return nil
}

func (x *Affinity) GetSpinClouddriverCaching() *ServiceAffinity {
	if x != nil {
		return x.SpinClouddriverCaching
	}
	return nil
}

func (x *Affinity) GetSpinClouddriverRo() *ServiceAffinity {
	if x != nil {
		return x.SpinClouddriverRo
	}
	return nil
}

func (x *Affinity) GetSpinClouddriverRoDeck() *ServiceAffinity {
	if x != nil {
		return x.SpinClouddriverRoDeck
	}
	return nil
}

func (x *Affinity) GetSpinClouddriverRw() *ServiceAffinity {
	if x != nil {
		return x.SpinClouddriverRw
	}
	return nil
}

func (x *Affinity) GetSpinDeck() *ServiceAffinity {
	if x != nil {
		return x.SpinDeck
	}
	return nil
}

func (x *Affinity) GetSpinEcho() *ServiceAffinity {
	if x != nil {
		return x.SpinEcho
	}
	return nil
}

func (x *Affinity) GetSpinFiat() *ServiceAffinity {
	if x != nil {
		return x.SpinFiat
	}
	return nil
}

func (x *Affinity) GetSpinFront50() *ServiceAffinity {
	if x != nil {
		return x.SpinFront50
	}
	return nil
}

func (x *Affinity) GetSpinGate() *ServiceAffinity {
	if x != nil {
		return x.SpinGate
	}
	return nil
}

func (x *Affinity) GetSpinIgor() *ServiceAffinity {
	if x != nil {
		return x.SpinIgor
	}
	return nil
}

func (x *Affinity) GetSpinOrca() *ServiceAffinity {
	if x != nil {
		return x.SpinOrca
	}
	return nil
}

func (x *Affinity) GetSpinRedis() *ServiceAffinity {
	if x != nil {
		return x.SpinRedis
	}
	return nil
}

func (x *Affinity) GetSpinRosco() *ServiceAffinity {
	if x != nil {
		return x.SpinRosco
	}
	return nil
}

type ServiceAffinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAffinity    *NodeAffinity    `protobuf:"bytes,1,opt,name=nodeAffinity,proto3" json:"nodeAffinity,omitempty"`
	PodAntiAffinity *PodAntiAffinity `protobuf:"bytes,2,opt,name=podAntiAffinity,proto3" json:"podAntiAffinity,omitempty"`
}

func (x *ServiceAffinity) Reset() {
	*x = ServiceAffinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAffinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAffinity) ProtoMessage() {}

func (x *ServiceAffinity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAffinity.ProtoReflect.Descriptor instead.
func (*ServiceAffinity) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceAffinity) GetNodeAffinity() *NodeAffinity {
	if x != nil {
		return x.NodeAffinity
	}
	return nil
}

func (x *ServiceAffinity) GetPodAntiAffinity() *PodAntiAffinity {
	if x != nil {
		return x.PodAntiAffinity
	}
	return nil
}

type PodAntiAffinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequiredDuringSchedulingIgnoredDuringExecution []*PAARDSIDE `protobuf:"bytes,1,rep,name=requiredDuringSchedulingIgnoredDuringExecution,proto3" json:"requiredDuringSchedulingIgnoredDuringExecution,omitempty"`
}

func (x *PodAntiAffinity) Reset() {
	*x = PodAntiAffinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodAntiAffinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodAntiAffinity) ProtoMessage() {}

func (x *PodAntiAffinity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodAntiAffinity.ProtoReflect.Descriptor instead.
func (*PodAntiAffinity) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{2}
}

func (x *PodAntiAffinity) GetRequiredDuringSchedulingIgnoredDuringExecution() []*PAARDSIDE {
	if x != nil {
		return x.RequiredDuringSchedulingIgnoredDuringExecution
	}
	return nil
}

type NodeAffinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequiredDuringSchedulingIgnoredDuringExecution *NARDSIDE `protobuf:"bytes,1,opt,name=requiredDuringSchedulingIgnoredDuringExecution,proto3" json:"requiredDuringSchedulingIgnoredDuringExecution,omitempty"`
}

func (x *NodeAffinity) Reset() {
	*x = NodeAffinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAffinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAffinity) ProtoMessage() {}

func (x *NodeAffinity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAffinity.ProtoReflect.Descriptor instead.
func (*NodeAffinity) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{3}
}

func (x *NodeAffinity) GetRequiredDuringSchedulingIgnoredDuringExecution() *NARDSIDE {
	if x != nil {
		return x.RequiredDuringSchedulingIgnoredDuringExecution
	}
	return nil
}

type PAARDSIDE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelSelector *LabelSelector `protobuf:"bytes,1,opt,name=labelSelector,proto3" json:"labelSelector,omitempty"`
}

func (x *PAARDSIDE) Reset() {
	*x = PAARDSIDE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PAARDSIDE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PAARDSIDE) ProtoMessage() {}

func (x *PAARDSIDE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PAARDSIDE.ProtoReflect.Descriptor instead.
func (*PAARDSIDE) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{4}
}

func (x *PAARDSIDE) GetLabelSelector() *LabelSelector {
	if x != nil {
		return x.LabelSelector
	}
	return nil
}

type NARDSIDE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeSelectorTerms []*NodeSelectorTerms `protobuf:"bytes,1,rep,name=nodeSelectorTerms,proto3" json:"nodeSelectorTerms,omitempty"`
}

func (x *NARDSIDE) Reset() {
	*x = NARDSIDE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NARDSIDE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NARDSIDE) ProtoMessage() {}

func (x *NARDSIDE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NARDSIDE.ProtoReflect.Descriptor instead.
func (*NARDSIDE) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{5}
}

func (x *NARDSIDE) GetNodeSelectorTerms() []*NodeSelectorTerms {
	if x != nil {
		return x.NodeSelectorTerms
	}
	return nil
}

type NodeSelectorTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchExpressions []*MatchExpressions `protobuf:"bytes,1,rep,name=matchExpressions,proto3" json:"matchExpressions,omitempty"`
}

func (x *NodeSelectorTerms) Reset() {
	*x = NodeSelectorTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSelectorTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSelectorTerms) ProtoMessage() {}

func (x *NodeSelectorTerms) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSelectorTerms.ProtoReflect.Descriptor instead.
func (*NodeSelectorTerms) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{6}
}

func (x *NodeSelectorTerms) GetMatchExpressions() []*MatchExpressions {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

type LabelSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchExpressions []*MatchExpressions `protobuf:"bytes,1,rep,name=matchExpressions,proto3" json:"matchExpressions,omitempty"`
	TopologyKey      string              `protobuf:"bytes,2,opt,name=topologyKey,proto3" json:"topologyKey,omitempty"`
}

func (x *LabelSelector) Reset() {
	*x = LabelSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSelector) ProtoMessage() {}

func (x *LabelSelector) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSelector.ProtoReflect.Descriptor instead.
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{7}
}

func (x *LabelSelector) GetMatchExpressions() []*MatchExpressions {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

func (x *LabelSelector) GetTopologyKey() string {
	if x != nil {
		return x.TopologyKey
	}
	return ""
}

type MatchExpressions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator string   `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Values   []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MatchExpressions) Reset() {
	*x = MatchExpressions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchExpressions) ProtoMessage() {}

func (x *MatchExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchExpressions.ProtoReflect.Descriptor instead.
func (*MatchExpressions) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP(), []int{8}
}

func (x *MatchExpressions) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MatchExpressions) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *MatchExpressions) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_proto_deploymentConfigurations_deploymentEnv_Affinity_proto protoreflect.FileDescriptor

var file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x2f, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x9b, 0x09, 0x0a, 0x08, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x10, 0x73, 0x70, 0x69, 0x6e, 0x5f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52,
	0x0f, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x66, 0x0a, 0x18, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
	0x52, 0x16, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x43, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x13, 0x73, 0x70, 0x69, 0x6e,
	0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x52, 0x11, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x12, 0x65, 0x0a, 0x18, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x5f, 0x64, 0x65,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x15, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x5c, 0x0a,
	0x13, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x72, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x11, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x77, 0x12, 0x49, 0x0a, 0x09, 0x73,
	0x70, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x70,
	0x69, 0x6e, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x65,
	0x63, 0x68, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x45, 0x63, 0x68,
	0x6f, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x66, 0x69, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x46, 0x69, 0x61, 0x74, 0x12, 0x4f, 0x0a, 0x0c,
	0x73, 0x70, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x35, 0x30, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
	0x52, 0x0b, 0x73, 0x70, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x35, 0x30, 0x12, 0x49, 0x0a,
	0x09, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x73, 0x70, 0x69, 0x6e, 0x47, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e,
	0x5f, 0x69, 0x67, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x49,
	0x67, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x63, 0x61,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x4f, 0x72, 0x63, 0x61, 0x12, 0x4b,
	0x0a, 0x0a, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
	0x52, 0x09, 0x73, 0x70, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x73,
	0x70, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x09, 0x73,
	0x70, 0x69, 0x6e, 0x52, 0x6f, 0x73, 0x63, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0c,
	0x6e, 0x6f, 0x64, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x6e,
	0x6f, 0x64, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x0f, 0x70,
	0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x52, 0x0f, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x8e, 0x01, 0x0a, 0x2e, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x41, 0x41, 0x52, 0x44, 0x53, 0x49, 0x44, 0x45, 0x52, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x8d, 0x01, 0x0a, 0x2e, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x4e, 0x41, 0x52, 0x44, 0x53, 0x49, 0x44, 0x45, 0x52, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x09, 0x50, 0x41, 0x41,
	0x52, 0x44, 0x53, 0x49, 0x44, 0x45, 0x12, 0x50, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x68, 0x0a, 0x08, 0x4e, 0x41, 0x52, 0x44,
	0x53, 0x49, 0x44, 0x45, 0x12, 0x5c, 0x0a, 0x11, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52,
	0x11, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x22, 0x6e, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x59, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4b, 0x65,
	0x79, 0x22, 0x58, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x2f, 0x5a, 0x2d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescOnce sync.Once
	file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescData = file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDesc
)

func file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescGZIP() []byte {
	file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescOnce.Do(func() {
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescData)
	})
	return file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDescData
}

var file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_goTypes = []interface{}{
	(*Affinity)(nil),          // 0: proto.deploymentEnvironment.Affinity
	(*ServiceAffinity)(nil),   // 1: proto.deploymentEnvironment.ServiceAffinity
	(*PodAntiAffinity)(nil),   // 2: proto.deploymentEnvironment.PodAntiAffinity
	(*NodeAffinity)(nil),      // 3: proto.deploymentEnvironment.NodeAffinity
	(*PAARDSIDE)(nil),         // 4: proto.deploymentEnvironment.PAARDSIDE
	(*NARDSIDE)(nil),          // 5: proto.deploymentEnvironment.NARDSIDE
	(*NodeSelectorTerms)(nil), // 6: proto.deploymentEnvironment.NodeSelectorTerms
	(*LabelSelector)(nil),     // 7: proto.deploymentEnvironment.LabelSelector
	(*MatchExpressions)(nil),  // 8: proto.deploymentEnvironment.MatchExpressions
}
var file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_depIdxs = []int32{
	1,  // 0: proto.deploymentEnvironment.Affinity.spin_clouddriver:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 1: proto.deploymentEnvironment.Affinity.spin_clouddriver_caching:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 2: proto.deploymentEnvironment.Affinity.spin_clouddriver_ro:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 3: proto.deploymentEnvironment.Affinity.spin_clouddriver_ro_deck:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 4: proto.deploymentEnvironment.Affinity.spin_clouddriver_rw:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 5: proto.deploymentEnvironment.Affinity.spin_deck:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 6: proto.deploymentEnvironment.Affinity.spin_echo:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 7: proto.deploymentEnvironment.Affinity.spin_fiat:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 8: proto.deploymentEnvironment.Affinity.spin_front50:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 9: proto.deploymentEnvironment.Affinity.spin_gate:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 10: proto.deploymentEnvironment.Affinity.spin_igor:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 11: proto.deploymentEnvironment.Affinity.spin_orca:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 12: proto.deploymentEnvironment.Affinity.spin_redis:type_name -> proto.deploymentEnvironment.ServiceAffinity
	1,  // 13: proto.deploymentEnvironment.Affinity.spin_rosco:type_name -> proto.deploymentEnvironment.ServiceAffinity
	3,  // 14: proto.deploymentEnvironment.ServiceAffinity.nodeAffinity:type_name -> proto.deploymentEnvironment.NodeAffinity
	2,  // 15: proto.deploymentEnvironment.ServiceAffinity.podAntiAffinity:type_name -> proto.deploymentEnvironment.PodAntiAffinity
	4,  // 16: proto.deploymentEnvironment.PodAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution:type_name -> proto.deploymentEnvironment.PAARDSIDE
	5,  // 17: proto.deploymentEnvironment.NodeAffinity.requiredDuringSchedulingIgnoredDuringExecution:type_name -> proto.deploymentEnvironment.NARDSIDE
	7,  // 18: proto.deploymentEnvironment.PAARDSIDE.labelSelector:type_name -> proto.deploymentEnvironment.LabelSelector
	6,  // 19: proto.deploymentEnvironment.NARDSIDE.nodeSelectorTerms:type_name -> proto.deploymentEnvironment.NodeSelectorTerms
	8,  // 20: proto.deploymentEnvironment.NodeSelectorTerms.matchExpressions:type_name -> proto.deploymentEnvironment.MatchExpressions
	8,  // 21: proto.deploymentEnvironment.LabelSelector.matchExpressions:type_name -> proto.deploymentEnvironment.MatchExpressions
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_init() }
func file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_init() {
	if File_proto_deploymentConfigurations_deploymentEnv_Affinity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Affinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAffinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodAntiAffinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAffinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PAARDSIDE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NARDSIDE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSelectorTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchExpressions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_goTypes,
		DependencyIndexes: file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_depIdxs,
		MessageInfos:      file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_msgTypes,
	}.Build()
	File_proto_deploymentConfigurations_deploymentEnv_Affinity_proto = out.File
	file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_rawDesc = nil
	file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_goTypes = nil
	file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_depIdxs = nil
}
