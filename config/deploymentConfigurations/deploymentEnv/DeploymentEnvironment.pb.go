// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.14.0
// source: proto/deploymentConfigurations/deploymentEnv/DeploymentEnvironment.proto

package deploymentEnv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the clouddriver microservice.
type DeploymentEnvironment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size           string        `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Type           string        `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	AccountName    string        `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ImageVariant   string        `protobuf:"bytes,4,opt,name=imageVariant,proto3" json:"imageVariant,omitempty"`
	BootstrapOnly  bool          `protobuf:"varint,5,opt,name=bootstrapOnly,proto3" json:"bootstrapOnly,omitempty"`
	UpdateVersions bool          `protobuf:"varint,6,opt,name=updateVersions,proto3" json:"updateVersions,omitempty"`
	Consul         *Consul       `protobuf:"bytes,7,opt,name=consul,proto3" json:"consul,omitempty"`
	Vault          *Vault        `protobuf:"bytes,8,opt,name=vault,proto3" json:"vault,omitempty"`
	Location       string        `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	CustomSizing   *CustomSizing `protobuf:"bytes,10,opt,name=customSizing,proto3" json:"customSizing,omitempty"`
	// Sidecar sidecars = 11;
	InitContainers      *InitContainers      `protobuf:"bytes,12,opt,name=initContainers,proto3" json:"initContainers,omitempty"`
	HostAliases         *HostAliases         `protobuf:"bytes,13,opt,name=hostAliases,proto3" json:"hostAliases,omitempty"`
	Tolerations         *Tolerations         `protobuf:"bytes,14,opt,name=tolerations,proto3" json:"tolerations,omitempty"`
	NodeSelectors       *NodeSelectors       `protobuf:"bytes,15,opt,name=nodeSelectors,proto3" json:"nodeSelectors,omitempty"`
	GitConfig           *GitConfig           `protobuf:"bytes,16,opt,name=gitConfig,proto3" json:"gitConfig,omitempty"`
	LivenessProbeConfig *LivenessProbeConfig `protobuf:"bytes,17,opt,name=livenessProbeConfig,proto3" json:"livenessProbeConfig,omitempty"`
	HaServices          *HaServices          `protobuf:"bytes,18,opt,name=haServices,proto3" json:"haServices,omitempty"`
	Affinity            *Affinity            `protobuf:"bytes,19,opt,name=affinity,proto3" json:"affinity,omitempty"`
	Container           []*Containers        `protobuf:"bytes,20,rep,name=container,proto3" json:"container,omitempty"`
	Volumes             []*Volumes           `protobuf:"bytes,21,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *DeploymentEnvironment) Reset() {
	*x = DeploymentEnvironment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEnvironment) ProtoMessage() {}

func (x *DeploymentEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentEnvironment.ProtoReflect.Descriptor instead.
func (*DeploymentEnvironment) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{0}
}

func (x *DeploymentEnvironment) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *DeploymentEnvironment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeploymentEnvironment) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *DeploymentEnvironment) GetImageVariant() string {
	if x != nil {
		return x.ImageVariant
	}
	return ""
}

func (x *DeploymentEnvironment) GetBootstrapOnly() bool {
	if x != nil {
		return x.BootstrapOnly
	}
	return false
}

func (x *DeploymentEnvironment) GetUpdateVersions() bool {
	if x != nil {
		return x.UpdateVersions
	}
	return false
}

func (x *DeploymentEnvironment) GetConsul() *Consul {
	if x != nil {
		return x.Consul
	}
	return nil
}

func (x *DeploymentEnvironment) GetVault() *Vault {
	if x != nil {
		return x.Vault
	}
	return nil
}

func (x *DeploymentEnvironment) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *DeploymentEnvironment) GetCustomSizing() *CustomSizing {
	if x != nil {
		return x.CustomSizing
	}
	return nil
}

func (x *DeploymentEnvironment) GetInitContainers() *InitContainers {
	if x != nil {
		return x.InitContainers
	}
	return nil
}

func (x *DeploymentEnvironment) GetHostAliases() *HostAliases {
	if x != nil {
		return x.HostAliases
	}
	return nil
}

func (x *DeploymentEnvironment) GetTolerations() *Tolerations {
	if x != nil {
		return x.Tolerations
	}
	return nil
}

func (x *DeploymentEnvironment) GetNodeSelectors() *NodeSelectors {
	if x != nil {
		return x.NodeSelectors
	}
	return nil
}

func (x *DeploymentEnvironment) GetGitConfig() *GitConfig {
	if x != nil {
		return x.GitConfig
	}
	return nil
}

func (x *DeploymentEnvironment) GetLivenessProbeConfig() *LivenessProbeConfig {
	if x != nil {
		return x.LivenessProbeConfig
	}
	return nil
}

func (x *DeploymentEnvironment) GetHaServices() *HaServices {
	if x != nil {
		return x.HaServices
	}
	return nil
}

func (x *DeploymentEnvironment) GetAffinity() *Affinity {
	if x != nil {
		return x.Affinity
	}
	return nil
}

func (x *DeploymentEnvironment) GetContainer() []*Containers {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *DeploymentEnvironment) GetVolumes() []*Volumes {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type NodeSelectors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeSelectors) Reset() {
	*x = NodeSelectors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSelectors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSelectors) ProtoMessage() {}

func (x *NodeSelectors) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSelectors.ProtoReflect.Descriptor instead.
func (*NodeSelectors) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{1}
}

type HostAliases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostAliases) Reset() {
	*x = HostAliases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAliases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAliases) ProtoMessage() {}

func (x *HostAliases) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAliases.ProtoReflect.Descriptor instead.
func (*HostAliases) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{2}
}

type Tolerations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator string `protobuf:"bytes,2,opt,name=Operator,proto3" json:"Operator,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Effect   string `protobuf:"bytes,4,opt,name=effect,proto3" json:"effect,omitempty"`
}

func (x *Tolerations) Reset() {
	*x = Tolerations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tolerations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tolerations) ProtoMessage() {}

func (x *Tolerations) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tolerations.ProtoReflect.Descriptor instead.
func (*Tolerations) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{3}
}

func (x *Tolerations) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tolerations) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Tolerations) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Tolerations) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

type LivenessProbeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled             bool  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	InitialDelaySeconds int32 `protobuf:"varint,2,opt,name=initialDelaySeconds,proto3" json:"initialDelaySeconds,omitempty"`
}

func (x *LivenessProbeConfig) Reset() {
	*x = LivenessProbeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivenessProbeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessProbeConfig) ProtoMessage() {}

func (x *LivenessProbeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessProbeConfig.ProtoReflect.Descriptor instead.
func (*LivenessProbeConfig) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{4}
}

func (x *LivenessProbeConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LivenessProbeConfig) GetInitialDelaySeconds() int32 {
	if x != nil {
		return x.InitialDelaySeconds
	}
	return 0
}

type GitConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamUser string `protobuf:"bytes,1,opt,name=upstreamUser,proto3" json:"upstreamUser,omitempty"`
	OriginUser   string `protobuf:"bytes,2,opt,name=originUser,proto3" json:"originUser,omitempty"`
}

func (x *GitConfig) Reset() {
	*x = GitConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitConfig) ProtoMessage() {}

func (x *GitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitConfig.ProtoReflect.Descriptor instead.
func (*GitConfig) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{5}
}

func (x *GitConfig) GetUpstreamUser() string {
	if x != nil {
		return x.UpstreamUser
	}
	return ""
}

func (x *GitConfig) GetOriginUser() string {
	if x != nil {
		return x.OriginUser
	}
	return ""
}

type Consul struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Enabled bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Consul) Reset() {
	*x = Consul{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consul) ProtoMessage() {}

func (x *Consul) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consul.ProtoReflect.Descriptor instead.
func (*Consul) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{6}
}

func (x *Consul) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Consul) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type Vault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Enabled bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Vault) Reset() {
	*x = Vault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault) ProtoMessage() {}

func (x *Vault) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault.ProtoReflect.Descriptor instead.
func (*Vault) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{7}
}

func (x *Vault) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Vault) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type HaServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clouddriver *ClouddriverHA `protobuf:"bytes,1,opt,name=clouddriver,proto3" json:"clouddriver,omitempty"`
	Echo        *EchoHA        `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (x *HaServices) Reset() {
	*x = HaServices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaServices) ProtoMessage() {}

func (x *HaServices) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaServices.ProtoReflect.Descriptor instead.
func (*HaServices) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{8}
}

func (x *HaServices) GetClouddriver() *ClouddriverHA {
	if x != nil {
		return x.Clouddriver
	}
	return nil
}

func (x *HaServices) GetEcho() *EchoHA {
	if x != nil {
		return x.Echo
	}
	return nil
}

type ClouddriverHA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                  bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DisableClouddriverRoDeck bool `protobuf:"varint,2,opt,name=disableClouddriverRoDeck,proto3" json:"disableClouddriverRoDeck,omitempty"`
}

func (x *ClouddriverHA) Reset() {
	*x = ClouddriverHA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClouddriverHA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClouddriverHA) ProtoMessage() {}

func (x *ClouddriverHA) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClouddriverHA.ProtoReflect.Descriptor instead.
func (*ClouddriverHA) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{9}
}

func (x *ClouddriverHA) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ClouddriverHA) GetDisableClouddriverRoDeck() bool {
	if x != nil {
		return x.DisableClouddriverRoDeck
	}
	return false
}

type EchoHA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled      bool            `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Image        string          `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Args         []string        `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	VolumeMounts []*VolumeMounts `protobuf:"bytes,4,rep,name=volumeMounts,proto3" json:"volumeMounts,omitempty"`
}

func (x *EchoHA) Reset() {
	*x = EchoHA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoHA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoHA) ProtoMessage() {}

func (x *EchoHA) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoHA.ProtoReflect.Descriptor instead.
func (*EchoHA) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP(), []int{10}
}

func (x *EchoHA) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EchoHA) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *EchoHA) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *EchoHA) GetVolumeMounts() []*VolumeMounts {
	if x != nil {
		return x.VolumeMounts
	}
	return nil
}

var File_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto protoreflect.FileDescriptor

var file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDesc = []byte{
	0x0a, 0x48, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x2f, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x76, 0x2f, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x2f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x69,
	0x7a, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x2f, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x2f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x09, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x0e, 0x69,
	0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x4a, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x52,
	0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0b,
	0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x74, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0d, 0x6e, 0x6f, 0x64,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x09, 0x67, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x62, 0x0a, 0x13, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x76, 0x65,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x13, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x0a, 0x68, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x0a, 0x68, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x08, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x66,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
	0x12, 0x45, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x07,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x0b, 0x54, 0x6f, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x22, 0x61, 0x0a, 0x13, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x09, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x3b, 0x0a, 0x05, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x93, 0x01, 0x0a, 0x0a, 0x48, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x4c, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x48,
	0x41, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x48,
	0x41, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x22, 0x65, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x48, 0x41, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x44, 0x65, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x44, 0x65, 0x63, 0x6b, 0x22, 0x9b,
	0x01, 0x0a, 0x06, 0x45, 0x63, 0x68, 0x6f, 0x48, 0x41, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x4d, 0x0a,
	0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0c,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x2f, 0x5a, 0x2d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescOnce sync.Once
	file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescData = file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDesc
)

func file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescGZIP() []byte {
	file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescOnce.Do(func() {
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescData)
	})
	return file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDescData
}

var file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_goTypes = []interface{}{
	(*DeploymentEnvironment)(nil), // 0: proto.deploymentEnvironment.DeploymentEnvironment
	(*NodeSelectors)(nil),         // 1: proto.deploymentEnvironment.NodeSelectors
	(*HostAliases)(nil),           // 2: proto.deploymentEnvironment.HostAliases
	(*Tolerations)(nil),           // 3: proto.deploymentEnvironment.Tolerations
	(*LivenessProbeConfig)(nil),   // 4: proto.deploymentEnvironment.LivenessProbeConfig
	(*GitConfig)(nil),             // 5: proto.deploymentEnvironment.GitConfig
	(*Consul)(nil),                // 6: proto.deploymentEnvironment.Consul
	(*Vault)(nil),                 // 7: proto.deploymentEnvironment.Vault
	(*HaServices)(nil),            // 8: proto.deploymentEnvironment.HaServices
	(*ClouddriverHA)(nil),         // 9: proto.deploymentEnvironment.ClouddriverHA
	(*EchoHA)(nil),                // 10: proto.deploymentEnvironment.EchoHA
	(*CustomSizing)(nil),          // 11: proto.deploymentEnvironment.CustomSizing
	(*InitContainers)(nil),        // 12: proto.deploymentEnvironment.InitContainers
	(*Affinity)(nil),              // 13: proto.deploymentEnvironment.Affinity
	(*Containers)(nil),            // 14: proto.deploymentEnvironment.Containers
	(*Volumes)(nil),               // 15: proto.deploymentEnvironment.Volumes
	(*VolumeMounts)(nil),          // 16: proto.deploymentEnvironment.VolumeMounts
}
var file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_depIdxs = []int32{
	6,  // 0: proto.deploymentEnvironment.DeploymentEnvironment.consul:type_name -> proto.deploymentEnvironment.Consul
	7,  // 1: proto.deploymentEnvironment.DeploymentEnvironment.vault:type_name -> proto.deploymentEnvironment.Vault
	11, // 2: proto.deploymentEnvironment.DeploymentEnvironment.customSizing:type_name -> proto.deploymentEnvironment.CustomSizing
	12, // 3: proto.deploymentEnvironment.DeploymentEnvironment.initContainers:type_name -> proto.deploymentEnvironment.InitContainers
	2,  // 4: proto.deploymentEnvironment.DeploymentEnvironment.hostAliases:type_name -> proto.deploymentEnvironment.HostAliases
	3,  // 5: proto.deploymentEnvironment.DeploymentEnvironment.tolerations:type_name -> proto.deploymentEnvironment.Tolerations
	1,  // 6: proto.deploymentEnvironment.DeploymentEnvironment.nodeSelectors:type_name -> proto.deploymentEnvironment.NodeSelectors
	5,  // 7: proto.deploymentEnvironment.DeploymentEnvironment.gitConfig:type_name -> proto.deploymentEnvironment.GitConfig
	4,  // 8: proto.deploymentEnvironment.DeploymentEnvironment.livenessProbeConfig:type_name -> proto.deploymentEnvironment.LivenessProbeConfig
	8,  // 9: proto.deploymentEnvironment.DeploymentEnvironment.haServices:type_name -> proto.deploymentEnvironment.HaServices
	13, // 10: proto.deploymentEnvironment.DeploymentEnvironment.affinity:type_name -> proto.deploymentEnvironment.Affinity
	14, // 11: proto.deploymentEnvironment.DeploymentEnvironment.container:type_name -> proto.deploymentEnvironment.Containers
	15, // 12: proto.deploymentEnvironment.DeploymentEnvironment.volumes:type_name -> proto.deploymentEnvironment.Volumes
	9,  // 13: proto.deploymentEnvironment.HaServices.clouddriver:type_name -> proto.deploymentEnvironment.ClouddriverHA
	10, // 14: proto.deploymentEnvironment.HaServices.echo:type_name -> proto.deploymentEnvironment.EchoHA
	16, // 15: proto.deploymentEnvironment.EchoHA.volumeMounts:type_name -> proto.deploymentEnvironment.VolumeMounts
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_init() }
func file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_init() {
	if File_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto != nil {
		return
	}
	file_proto_deploymentConfigurations_deploymentEnv_Containers_proto_init()
	file_proto_deploymentConfigurations_deploymentEnv_InitContainers_proto_init()
	file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_init()
	file_proto_deploymentConfigurations_deploymentEnv_Affinity_proto_init()
	file_proto_deploymentConfigurations_deploymentEnv_Volumes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentEnvironment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSelectors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAliases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tolerations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivenessProbeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consul); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaServices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClouddriverHA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoHA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_goTypes,
		DependencyIndexes: file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_depIdxs,
		MessageInfos:      file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_msgTypes,
	}.Build()
	File_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto = out.File
	file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_rawDesc = nil
	file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_goTypes = nil
	file_proto_deploymentConfigurations_deploymentEnv_DeploymentEnvironment_proto_depIdxs = nil
}
