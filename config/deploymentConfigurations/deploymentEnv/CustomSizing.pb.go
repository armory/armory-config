// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.21.5
// source: proto/deploymentConfigurations/deploymentEnv/CustomSizing.proto

package deploymentEnv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomSizing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpinClouddriver          *ServiceSizing `protobuf:"bytes,1,opt,name=spin_clouddriver,json=spinClouddriver,proto3" json:"spin_clouddriver,omitempty"`
	SpinVaultServer          *ServiceSizing `protobuf:"bytes,2,opt,name=spin_vault_server,json=spinVaultServer,proto3" json:"spin_vault_server,omitempty"`
	Deck                     *ServiceSizing `protobuf:"bytes,3,opt,name=deck,proto3" json:"deck,omitempty"`
	Echo                     *ServiceSizing `protobuf:"bytes,4,opt,name=echo,proto3" json:"echo,omitempty"`
	SpinRosco                *ServiceSizing `protobuf:"bytes,5,opt,name=spin_rosco,json=spinRosco,proto3" json:"spin_rosco,omitempty"`
	Redis                    *ServiceSizing `protobuf:"bytes,6,opt,name=redis,proto3" json:"redis,omitempty"`
	RedisBootstrap           *ServiceSizing `protobuf:"bytes,7,opt,name=redis_bootstrap,json=redisBootstrap,proto3" json:"redis_bootstrap,omitempty"`
	Clouddriver              *ServiceSizing `protobuf:"bytes,8,opt,name=clouddriver,proto3" json:"clouddriver,omitempty"`
	Front50                  *ServiceSizing `protobuf:"bytes,9,opt,name=front50,proto3" json:"front50,omitempty"`
	ConsulServer             *ServiceSizing `protobuf:"bytes,10,opt,name=consul_server,json=consulServer,proto3" json:"consul_server,omitempty"`
	Kayenta                  *ServiceSizing `protobuf:"bytes,11,opt,name=kayenta,proto3" json:"kayenta,omitempty"`
	ClouddriverRw            *ServiceSizing `protobuf:"bytes,12,opt,name=clouddriver_rw,json=clouddriverRw,proto3" json:"clouddriver_rw,omitempty"`
	SpinClouddriverRoDeck    *ServiceSizing `protobuf:"bytes,13,opt,name=spin_clouddriver_ro_deck,json=spinClouddriverRoDeck,proto3" json:"spin_clouddriver_ro_deck,omitempty"`
	SpinOrcaBootstrap        *ServiceSizing `protobuf:"bytes,14,opt,name=spin_orca_bootstrap,json=spinOrcaBootstrap,proto3" json:"spin_orca_bootstrap,omitempty"`
	ClouddriverRo            *ServiceSizing `protobuf:"bytes,15,opt,name=clouddriver_ro,json=clouddriverRo,proto3" json:"clouddriver_ro,omitempty"`
	SpinIgor                 *ServiceSizing `protobuf:"bytes,16,opt,name=spin_igor,json=spinIgor,proto3" json:"spin_igor,omitempty"`
	SpinKayenta              *ServiceSizing `protobuf:"bytes,17,opt,name=spin_kayenta,json=spinKayenta,proto3" json:"spin_kayenta,omitempty"`
	SpinOrca                 *ServiceSizing `protobuf:"bytes,18,opt,name=spin_orca,json=spinOrca,proto3" json:"spin_orca,omitempty"`
	VaultServer              *ServiceSizing `protobuf:"bytes,19,opt,name=vault_server,json=vaultServer,proto3" json:"vault_server,omitempty"`
	VaultClient              *ServiceSizing `protobuf:"bytes,20,opt,name=vault_client,json=vaultClient,proto3" json:"vault_client,omitempty"`
	EchoScheduler            *ServiceSizing `protobuf:"bytes,21,opt,name=echo_scheduler,json=echoScheduler,proto3" json:"echo_scheduler,omitempty"`
	SpinClouddriverRo        *ServiceSizing `protobuf:"bytes,22,opt,name=spin_clouddriver_ro,json=spinClouddriverRo,proto3" json:"spin_clouddriver_ro,omitempty"`
	SpinRedis                *ServiceSizing `protobuf:"bytes,23,opt,name=spin_redis,json=spinRedis,proto3" json:"spin_redis,omitempty"`
	EchoWorker               *ServiceSizing `protobuf:"bytes,24,opt,name=echo_worker,json=echoWorker,proto3" json:"echo_worker,omitempty"`
	OrcaBootstrap            *ServiceSizing `protobuf:"bytes,25,opt,name=orca_bootstrap,json=orcaBootstrap,proto3" json:"orca_bootstrap,omitempty"`
	SpinRedisBootstrap       *ServiceSizing `protobuf:"bytes,26,opt,name=spin_redis_bootstrap,json=spinRedisBootstrap,proto3" json:"spin_redis_bootstrap,omitempty"`
	SpinConsulClient         *ServiceSizing `protobuf:"bytes,27,opt,name=spin_consul_client,json=spinConsulClient,proto3" json:"spin_consul_client,omitempty"`
	SpinMonitoringDaemon     *ServiceSizing `protobuf:"bytes,28,opt,name=spin_monitoring_daemon,json=spinMonitoringDaemon,proto3" json:"spin_monitoring_daemon,omitempty"`
	ClouddriverRoDeck        *ServiceSizing `protobuf:"bytes,29,opt,name=clouddriver_ro_deck,json=clouddriverRoDeck,proto3" json:"clouddriver_ro_deck,omitempty"`
	SpinDeck                 *ServiceSizing `protobuf:"bytes,30,opt,name=spin_deck,json=spinDeck,proto3" json:"spin_deck,omitempty"`
	SpinEcho                 *ServiceSizing `protobuf:"bytes,31,opt,name=spin_echo,json=spinEcho,proto3" json:"spin_echo,omitempty"`
	ClouddriverBootstrap     *ServiceSizing `protobuf:"bytes,32,opt,name=clouddriver_bootstrap,json=clouddriverBootstrap,proto3" json:"clouddriver_bootstrap,omitempty"`
	SpinEchoScheduler        *ServiceSizing `protobuf:"bytes,33,opt,name=spin_echo_scheduler,json=spinEchoScheduler,proto3" json:"spin_echo_scheduler,omitempty"`
	SpinClouddriverCaching   *ServiceSizing `protobuf:"bytes,34,opt,name=spin_clouddriver_caching,json=spinClouddriverCaching,proto3" json:"spin_clouddriver_caching,omitempty"`
	SpinClouddriverBootstrap *ServiceSizing `protobuf:"bytes,35,opt,name=spin_clouddriver_bootstrap,json=spinClouddriverBootstrap,proto3" json:"spin_clouddriver_bootstrap,omitempty"`
	SpinVaultClient          *ServiceSizing `protobuf:"bytes,36,opt,name=spin_vault_client,json=spinVaultClient,proto3" json:"spin_vault_client,omitempty"`
	SpinFiat                 *ServiceSizing `protobuf:"bytes,37,opt,name=spin_fiat,json=spinFiat,proto3" json:"spin_fiat,omitempty"`
	SpinEchoWorker           *ServiceSizing `protobuf:"bytes,38,opt,name=spin_echo_worker,json=spinEchoWorker,proto3" json:"spin_echo_worker,omitempty"`
	ConsulClient             *ServiceSizing `protobuf:"bytes,39,opt,name=consul_client,json=consulClient,proto3" json:"consul_client,omitempty"`
	SpinGate                 *ServiceSizing `protobuf:"bytes,40,opt,name=spin_gate,json=spinGate,proto3" json:"spin_gate,omitempty"`
	ClouddriverCaching       *ServiceSizing `protobuf:"bytes,41,opt,name=clouddriver_caching,json=clouddriverCaching,proto3" json:"clouddriver_caching,omitempty"`
	SpinConsulServer         *ServiceSizing `protobuf:"bytes,42,opt,name=spin_consul_server,json=spinConsulServer,proto3" json:"spin_consul_server,omitempty"`
	Gate                     *ServiceSizing `protobuf:"bytes,43,opt,name=gate,proto3" json:"gate,omitempty"`
	MonitoringDaemon         *ServiceSizing `protobuf:"bytes,44,opt,name=monitoring_daemon,json=monitoringDaemon,proto3" json:"monitoring_daemon,omitempty"`
	SpinClouddriverRw        *ServiceSizing `protobuf:"bytes,45,opt,name=spin_clouddriver_rw,json=spinClouddriverRw,proto3" json:"spin_clouddriver_rw,omitempty"`
	Fiat                     *ServiceSizing `protobuf:"bytes,46,opt,name=fiat,proto3" json:"fiat,omitempty"`
	Igor                     *ServiceSizing `protobuf:"bytes,47,opt,name=igor,proto3" json:"igor,omitempty"`
	Orca                     *ServiceSizing `protobuf:"bytes,48,opt,name=orca,proto3" json:"orca,omitempty"`
	Rosco                    *ServiceSizing `protobuf:"bytes,49,opt,name=rosco,proto3" json:"rosco,omitempty"`
	SpinFront50              *ServiceSizing `protobuf:"bytes,50,opt,name=spin_front50,json=spinFront50,proto3" json:"spin_front50,omitempty"`
}

func (x *CustomSizing) Reset() {
	*x = CustomSizing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomSizing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomSizing) ProtoMessage() {}

func (x *CustomSizing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomSizing.ProtoReflect.Descriptor instead.
func (*CustomSizing) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescGZIP(), []int{0}
}

func (x *CustomSizing) GetSpinClouddriver() *ServiceSizing {
	if x != nil {
		return x.SpinClouddriver
	}
	return nil
}

func (x *CustomSizing) GetSpinVaultServer() *ServiceSizing {
	if x != nil {
		return x.SpinVaultServer
	}
	return nil
}

func (x *CustomSizing) GetDeck() *ServiceSizing {
	if x != nil {
		return x.Deck
	}
	return nil
}

func (x *CustomSizing) GetEcho() *ServiceSizing {
	if x != nil {
		return x.Echo
	}
	return nil
}

func (x *CustomSizing) GetSpinRosco() *ServiceSizing {
	if x != nil {
		return x.SpinRosco
	}
	return nil
}

func (x *CustomSizing) GetRedis() *ServiceSizing {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *CustomSizing) GetRedisBootstrap() *ServiceSizing {
	if x != nil {
		return x.RedisBootstrap
	}
	return nil
}

func (x *CustomSizing) GetClouddriver() *ServiceSizing {
	if x != nil {
		return x.Clouddriver
	}
	return nil
}

func (x *CustomSizing) GetFront50() *ServiceSizing {
	if x != nil {
		return x.Front50
	}
	return nil
}

func (x *CustomSizing) GetConsulServer() *ServiceSizing {
	if x != nil {
		return x.ConsulServer
	}
	return nil
}

func (x *CustomSizing) GetKayenta() *ServiceSizing {
	if x != nil {
		return x.Kayenta
	}
	return nil
}

func (x *CustomSizing) GetClouddriverRw() *ServiceSizing {
	if x != nil {
		return x.ClouddriverRw
	}
	return nil
}

func (x *CustomSizing) GetSpinClouddriverRoDeck() *ServiceSizing {
	if x != nil {
		return x.SpinClouddriverRoDeck
	}
	return nil
}

func (x *CustomSizing) GetSpinOrcaBootstrap() *ServiceSizing {
	if x != nil {
		return x.SpinOrcaBootstrap
	}
	return nil
}

func (x *CustomSizing) GetClouddriverRo() *ServiceSizing {
	if x != nil {
		return x.ClouddriverRo
	}
	return nil
}

func (x *CustomSizing) GetSpinIgor() *ServiceSizing {
	if x != nil {
		return x.SpinIgor
	}
	return nil
}

func (x *CustomSizing) GetSpinKayenta() *ServiceSizing {
	if x != nil {
		return x.SpinKayenta
	}
	return nil
}

func (x *CustomSizing) GetSpinOrca() *ServiceSizing {
	if x != nil {
		return x.SpinOrca
	}
	return nil
}

func (x *CustomSizing) GetVaultServer() *ServiceSizing {
	if x != nil {
		return x.VaultServer
	}
	return nil
}

func (x *CustomSizing) GetVaultClient() *ServiceSizing {
	if x != nil {
		return x.VaultClient
	}
	return nil
}

func (x *CustomSizing) GetEchoScheduler() *ServiceSizing {
	if x != nil {
		return x.EchoScheduler
	}
	return nil
}

func (x *CustomSizing) GetSpinClouddriverRo() *ServiceSizing {
	if x != nil {
		return x.SpinClouddriverRo
	}
	return nil
}

func (x *CustomSizing) GetSpinRedis() *ServiceSizing {
	if x != nil {
		return x.SpinRedis
	}
	return nil
}

func (x *CustomSizing) GetEchoWorker() *ServiceSizing {
	if x != nil {
		return x.EchoWorker
	}
	return nil
}

func (x *CustomSizing) GetOrcaBootstrap() *ServiceSizing {
	if x != nil {
		return x.OrcaBootstrap
	}
	return nil
}

func (x *CustomSizing) GetSpinRedisBootstrap() *ServiceSizing {
	if x != nil {
		return x.SpinRedisBootstrap
	}
	return nil
}

func (x *CustomSizing) GetSpinConsulClient() *ServiceSizing {
	if x != nil {
		return x.SpinConsulClient
	}
	return nil
}

func (x *CustomSizing) GetSpinMonitoringDaemon() *ServiceSizing {
	if x != nil {
		return x.SpinMonitoringDaemon
	}
	return nil
}

func (x *CustomSizing) GetClouddriverRoDeck() *ServiceSizing {
	if x != nil {
		return x.ClouddriverRoDeck
	}
	return nil
}

func (x *CustomSizing) GetSpinDeck() *ServiceSizing {
	if x != nil {
		return x.SpinDeck
	}
	return nil
}

func (x *CustomSizing) GetSpinEcho() *ServiceSizing {
	if x != nil {
		return x.SpinEcho
	}
	return nil
}

func (x *CustomSizing) GetClouddriverBootstrap() *ServiceSizing {
	if x != nil {
		return x.ClouddriverBootstrap
	}
	return nil
}

func (x *CustomSizing) GetSpinEchoScheduler() *ServiceSizing {
	if x != nil {
		return x.SpinEchoScheduler
	}
	return nil
}

func (x *CustomSizing) GetSpinClouddriverCaching() *ServiceSizing {
	if x != nil {
		return x.SpinClouddriverCaching
	}
	return nil
}

func (x *CustomSizing) GetSpinClouddriverBootstrap() *ServiceSizing {
	if x != nil {
		return x.SpinClouddriverBootstrap
	}
	return nil
}

func (x *CustomSizing) GetSpinVaultClient() *ServiceSizing {
	if x != nil {
		return x.SpinVaultClient
	}
	return nil
}

func (x *CustomSizing) GetSpinFiat() *ServiceSizing {
	if x != nil {
		return x.SpinFiat
	}
	return nil
}

func (x *CustomSizing) GetSpinEchoWorker() *ServiceSizing {
	if x != nil {
		return x.SpinEchoWorker
	}
	return nil
}

func (x *CustomSizing) GetConsulClient() *ServiceSizing {
	if x != nil {
		return x.ConsulClient
	}
	return nil
}

func (x *CustomSizing) GetSpinGate() *ServiceSizing {
	if x != nil {
		return x.SpinGate
	}
	return nil
}

func (x *CustomSizing) GetClouddriverCaching() *ServiceSizing {
	if x != nil {
		return x.ClouddriverCaching
	}
	return nil
}

func (x *CustomSizing) GetSpinConsulServer() *ServiceSizing {
	if x != nil {
		return x.SpinConsulServer
	}
	return nil
}

func (x *CustomSizing) GetGate() *ServiceSizing {
	if x != nil {
		return x.Gate
	}
	return nil
}

func (x *CustomSizing) GetMonitoringDaemon() *ServiceSizing {
	if x != nil {
		return x.MonitoringDaemon
	}
	return nil
}

func (x *CustomSizing) GetSpinClouddriverRw() *ServiceSizing {
	if x != nil {
		return x.SpinClouddriverRw
	}
	return nil
}

func (x *CustomSizing) GetFiat() *ServiceSizing {
	if x != nil {
		return x.Fiat
	}
	return nil
}

func (x *CustomSizing) GetIgor() *ServiceSizing {
	if x != nil {
		return x.Igor
	}
	return nil
}

func (x *CustomSizing) GetOrca() *ServiceSizing {
	if x != nil {
		return x.Orca
	}
	return nil
}

func (x *CustomSizing) GetRosco() *ServiceSizing {
	if x != nil {
		return x.Rosco
	}
	return nil
}

func (x *CustomSizing) GetSpinFront50() *ServiceSizing {
	if x != nil {
		return x.SpinFront50
	}
	return nil
}

type ServiceSizing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replicas int32   `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Requests *Sizing `protobuf:"bytes,2,opt,name=requests,proto3" json:"requests,omitempty"`
	Limits   *Sizing `protobuf:"bytes,3,opt,name=limits,proto3" json:"limits,omitempty"`
}

func (x *ServiceSizing) Reset() {
	*x = ServiceSizing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSizing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSizing) ProtoMessage() {}

func (x *ServiceSizing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSizing.ProtoReflect.Descriptor instead.
func (*ServiceSizing) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceSizing) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ServiceSizing) GetRequests() *Sizing {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *ServiceSizing) GetLimits() *Sizing {
	if x != nil {
		return x.Limits
	}
	return nil
}

type Sizing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory string `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu    string `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
}

func (x *Sizing) Reset() {
	*x = Sizing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sizing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sizing) ProtoMessage() {}

func (x *Sizing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sizing.ProtoReflect.Descriptor instead.
func (*Sizing) Descriptor() ([]byte, []int) {
	return file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescGZIP(), []int{2}
}

func (x *Sizing) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *Sizing) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

var File_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto protoreflect.FileDescriptor

var file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x2f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xed,
	0x1f, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x12,
	0x55, 0x0a, 0x10, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x11, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x73,
	0x70, 0x69, 0x6e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3e,
	0x0a, 0x04, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x65, 0x63, 0x6b, 0x12, 0x3e,
	0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x12, 0x49,
	0x0a, 0x0a, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x09,
	0x73, 0x70, 0x69, 0x6e, 0x52, 0x6f, 0x73, 0x63, 0x6f, 0x12, 0x40, 0x0a, 0x05, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69,
	0x7a, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x72,
	0x65, 0x64, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67,
	0x52, 0x0e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x12, 0x4c, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e,
	0x67, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x44,
	0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x35, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x35, 0x30, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x07, 0x6b, 0x61, 0x79, 0x65, 0x6e, 0x74, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x6b, 0x61, 0x79, 0x65, 0x6e, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x77, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52,
	0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x77, 0x12, 0x63,
	0x0a, 0x18, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x72, 0x6f, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x73, 0x70,
	0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x44,
	0x65, 0x63, 0x6b, 0x12, 0x5a, 0x0a, 0x13, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x63, 0x61,
	0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x73, 0x70,
	0x69, 0x6e, 0x4f, 0x72, 0x63, 0x61, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12,
	0x51, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a,
	0x69, 0x6e, 0x67, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x6f, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x69, 0x67, 0x6f, 0x72, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x49, 0x67, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x0c, 0x73,
	0x70, 0x69, 0x6e, 0x5f, 0x6b, 0x61, 0x79, 0x65, 0x6e, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x73,
	0x70, 0x69, 0x6e, 0x4b, 0x61, 0x79, 0x65, 0x6e, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x70,
	0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x63, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x4f,
	0x72, 0x63, 0x61, 0x12, 0x4d, 0x0a, 0x0c, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0c, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69,
	0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x51, 0x0a, 0x0e, 0x65, 0x63, 0x68, 0x6f, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x13, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x73,
	0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x6f,
	0x12, 0x49, 0x0a, 0x0a, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67,
	0x52, 0x09, 0x73, 0x70, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x65,
	0x63, 0x68, 0x6f, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x65, 0x63,
	0x68, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0e, 0x6f, 0x72, 0x63, 0x61,
	0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x6f, 0x72,
	0x63, 0x61, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x5c, 0x0a, 0x14, 0x73,
	0x70, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x73, 0x70, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x58, 0x0a, 0x12, 0x73, 0x70, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e,
	0x67, 0x52, 0x10, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x60, 0x0a, 0x16, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52,
	0x14, 0x73, 0x70, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x11,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x44, 0x65, 0x63,
	0x6b, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x70,
	0x69, 0x6e, 0x5f, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x45,
	0x63, 0x68, 0x6f, 0x12, 0x5f, 0x0a, 0x15, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x14,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x65, 0x63, 0x68,
	0x6f, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x73,
	0x70, 0x69, 0x6e, 0x45, 0x63, 0x68, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x12, 0x64, 0x0a, 0x18, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x16,
	0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x68, 0x0a, 0x1a, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x18, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x12, 0x56, 0x0a, 0x11, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x73, 0x70, 0x69, 0x6e, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e,
	0x5f, 0x66, 0x69, 0x61, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x46, 0x69, 0x61,
	0x74, 0x12, 0x54, 0x0a, 0x10, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x65, 0x63, 0x68, 0x6f, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x73, 0x70, 0x69, 0x6e, 0x45, 0x63, 0x68,
	0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x6e,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x47, 0x61, 0x74,
	0x65, 0x12, 0x5b, 0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x58,
	0x0a, 0x12, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x04, 0x67, 0x61, 0x74, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69,
	0x6e, 0x67, 0x52, 0x04, 0x67, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x18, 0x2c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52,
	0x10, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x12, 0x5a, 0x0a, 0x13, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x77, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x73, 0x70, 0x69, 0x6e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x77, 0x12, 0x3e, 0x0a,
	0x04, 0x66, 0x69, 0x61, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x66, 0x69, 0x61, 0x74, 0x12, 0x3e, 0x0a,
	0x04, 0x69, 0x67, 0x6f, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x69, 0x67, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x04, 0x6f, 0x72, 0x63, 0x61, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6f, 0x72, 0x63, 0x61, 0x12, 0x40, 0x0a,
	0x05, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x12,
	0x4d, 0x0a, 0x0c, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x35, 0x30, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e,
	0x67, 0x52, 0x0b, 0x73, 0x70, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x35, 0x30, 0x22, 0xa9,
	0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x3f, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x69, 0x7a,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x3b, 0x0a,
	0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x69, 0x7a, 0x69,
	0x6e, 0x67, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x69,
	0x7a, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x42, 0x2f,
	0x5a, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescOnce sync.Once
	file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescData = file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDesc
)

func file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescGZIP() []byte {
	file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescOnce.Do(func() {
		file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescData)
	})
	return file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDescData
}

var file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_goTypes = []interface{}{
	(*CustomSizing)(nil),  // 0: proto.deploymentEnvironment.CustomSizing
	(*ServiceSizing)(nil), // 1: proto.deploymentEnvironment.ServiceSizing
	(*Sizing)(nil),        // 2: proto.deploymentEnvironment.Sizing
}
var file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_depIdxs = []int32{
	1,  // 0: proto.deploymentEnvironment.CustomSizing.spin_clouddriver:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 1: proto.deploymentEnvironment.CustomSizing.spin_vault_server:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 2: proto.deploymentEnvironment.CustomSizing.deck:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 3: proto.deploymentEnvironment.CustomSizing.echo:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 4: proto.deploymentEnvironment.CustomSizing.spin_rosco:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 5: proto.deploymentEnvironment.CustomSizing.redis:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 6: proto.deploymentEnvironment.CustomSizing.redis_bootstrap:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 7: proto.deploymentEnvironment.CustomSizing.clouddriver:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 8: proto.deploymentEnvironment.CustomSizing.front50:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 9: proto.deploymentEnvironment.CustomSizing.consul_server:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 10: proto.deploymentEnvironment.CustomSizing.kayenta:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 11: proto.deploymentEnvironment.CustomSizing.clouddriver_rw:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 12: proto.deploymentEnvironment.CustomSizing.spin_clouddriver_ro_deck:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 13: proto.deploymentEnvironment.CustomSizing.spin_orca_bootstrap:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 14: proto.deploymentEnvironment.CustomSizing.clouddriver_ro:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 15: proto.deploymentEnvironment.CustomSizing.spin_igor:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 16: proto.deploymentEnvironment.CustomSizing.spin_kayenta:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 17: proto.deploymentEnvironment.CustomSizing.spin_orca:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 18: proto.deploymentEnvironment.CustomSizing.vault_server:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 19: proto.deploymentEnvironment.CustomSizing.vault_client:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 20: proto.deploymentEnvironment.CustomSizing.echo_scheduler:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 21: proto.deploymentEnvironment.CustomSizing.spin_clouddriver_ro:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 22: proto.deploymentEnvironment.CustomSizing.spin_redis:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 23: proto.deploymentEnvironment.CustomSizing.echo_worker:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 24: proto.deploymentEnvironment.CustomSizing.orca_bootstrap:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 25: proto.deploymentEnvironment.CustomSizing.spin_redis_bootstrap:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 26: proto.deploymentEnvironment.CustomSizing.spin_consul_client:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 27: proto.deploymentEnvironment.CustomSizing.spin_monitoring_daemon:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 28: proto.deploymentEnvironment.CustomSizing.clouddriver_ro_deck:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 29: proto.deploymentEnvironment.CustomSizing.spin_deck:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 30: proto.deploymentEnvironment.CustomSizing.spin_echo:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 31: proto.deploymentEnvironment.CustomSizing.clouddriver_bootstrap:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 32: proto.deploymentEnvironment.CustomSizing.spin_echo_scheduler:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 33: proto.deploymentEnvironment.CustomSizing.spin_clouddriver_caching:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 34: proto.deploymentEnvironment.CustomSizing.spin_clouddriver_bootstrap:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 35: proto.deploymentEnvironment.CustomSizing.spin_vault_client:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 36: proto.deploymentEnvironment.CustomSizing.spin_fiat:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 37: proto.deploymentEnvironment.CustomSizing.spin_echo_worker:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 38: proto.deploymentEnvironment.CustomSizing.consul_client:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 39: proto.deploymentEnvironment.CustomSizing.spin_gate:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 40: proto.deploymentEnvironment.CustomSizing.clouddriver_caching:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 41: proto.deploymentEnvironment.CustomSizing.spin_consul_server:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 42: proto.deploymentEnvironment.CustomSizing.gate:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 43: proto.deploymentEnvironment.CustomSizing.monitoring_daemon:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 44: proto.deploymentEnvironment.CustomSizing.spin_clouddriver_rw:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 45: proto.deploymentEnvironment.CustomSizing.fiat:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 46: proto.deploymentEnvironment.CustomSizing.igor:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 47: proto.deploymentEnvironment.CustomSizing.orca:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 48: proto.deploymentEnvironment.CustomSizing.rosco:type_name -> proto.deploymentEnvironment.ServiceSizing
	1,  // 49: proto.deploymentEnvironment.CustomSizing.spin_front50:type_name -> proto.deploymentEnvironment.ServiceSizing
	2,  // 50: proto.deploymentEnvironment.ServiceSizing.requests:type_name -> proto.deploymentEnvironment.Sizing
	2,  // 51: proto.deploymentEnvironment.ServiceSizing.limits:type_name -> proto.deploymentEnvironment.Sizing
	52, // [52:52] is the sub-list for method output_type
	52, // [52:52] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_init() }
func file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_init() {
	if File_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomSizing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSizing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sizing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_goTypes,
		DependencyIndexes: file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_depIdxs,
		MessageInfos:      file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_msgTypes,
	}.Build()
	File_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto = out.File
	file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_rawDesc = nil
	file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_goTypes = nil
	file_proto_deploymentConfigurations_deploymentEnv_CustomSizing_proto_depIdxs = nil
}
